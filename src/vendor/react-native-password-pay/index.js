import React, { Component } from 'react';import {StyleSheet,View,TextInput,Text,TouchableHighlight } from 'react-native';const styles = StyleSheet.create({    container: {        alignItems: 'center',        flexDirection: 'row',        borderWidth: StyleSheet.hairlineWidth,        borderColor: '#ccc',        backgroundColor: '#fff'    },    inputItem: {        height: 40,        width: 40,        justifyContent: 'center',        alignItems: 'center'    },    inputItemBorderLeftWidth: {        borderLeftWidth: StyleSheet.hairlineWidth,        borderColor: '#ccc',    },    iconStyle: {        width: 16,        height: 16,        backgroundColor: '#222',        borderRadius: 8,    },    input: {opacity: 0, position: 'absolute'}});export default class passwordInput extends Component{    constructor(props){        super(props);        this.state={            text: props.password        };        this._onPress = this._onPress.bind(this);    }    _onPress(){        this._input.focus();    }    componentWillReceiveProps(nextProps) {        if (nextProps.password !== this.state.text) {            this.setState({                text: nextProps.password            })        }    }    render(){        return(            <TouchableHighlight onPress={this._onPress} activeOpacity={1} underlayColor='transparent'>                <View style={[styles.container,this.props.style]} >                    <TextInput ref={(c) => this._input = c}                               style={styles.input}                               maxLength={this.props.maxLength}                               autoFocus={true}                               keyboardType="numeric"                               value={this.state.text}                               underlineColorAndroid='transparent'                               onChangeText={(text)=>{this.setState({text});this.props.onChange(text)}}                    />                    {                        this._getInputItem()                    }                </View>            </TouchableHighlight>        )    }    _getInputItem(){        let inputItem = [];        let { text }=this.state;        for (let i = 0; i < parseInt(this.props.maxLength); i++) {            if (i == 0) {                inputItem.push(                    <View key={i} style={[styles.inputItem,this.props.inputItemStyle]}>                        {i < text.length ? <View style={[styles.iconStyle,this.props.iconStyle]}></View> : null}                    </View>)            }            else {                inputItem.push(                    <View key={i} style={[styles.inputItem,styles.inputItemBorderLeftWidth,this.props.inputItemStyle]}>                        {i < text.length ?                            <View style={[styles.iconStyle,this.props.iconStyle]}>                            </View> : null}                    </View>)            }            ;        }        return inputItem;    }}
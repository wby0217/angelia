import React, { Component } from 'react';import {    View,    Text,    StyleSheet,    Image,    Dimensions,    ListView,    ActivityIndicator,    RefreshControl} from 'react-native';import {NavigationActions} from 'react-navigation';import accountService from '../../../service/accountService';import errorHandle from '../../../service/errorHandle';import AppButton from '../../../component/appButton';import Header from '../../../component/header';const { width } = Dimensions.get('window');export default class GameRecordDetail extends Component {    constructor(props){        super(props);        this.state = ({            orderDetail: {}        });        this.orderId = this.props.navigation.state.params.orderId;        this.navigate = this.props.navigation.navigate;        this.navigation = props.navigation;        console.log('this.orderId===', this.orderId );    };    componentWillMount () {        this.fetchRecord()    };    render () {        const imgBtm = require('../../../assets/images/boxBottom.png');        const prize = require('../../../assets/images/prize.png');        const noPrize = require('../../../assets/images/noPrize.png');        const { prizeStatus, lotteryName, issueNo, prizeNumber, lotteryPlay, lotteryType, roomLevel,                winAmount, betAmount, betOdds, datetime, orderNo, betContent  } = this.state.orderDetail;        return (            <View>                <Header headerTitle = '订单详情'                        navigation = {this.navigation}/>                <View style={styles.container}>                    <View style={styles.orderBox}>                        <View style={styles.name}>                            <Text style={styles.lotteryName}>{ lotteryName }</Text>                        </View>                        <View style={styles.item}>                            <View style={styles.content}>                                <Text style={styles.label}>开奖号码</Text>                                <Text style={[styles.topTitle,{fontWeight: '600',letterSpacing: 0.2}]}>{ !!prizeNumber ? prizeNumber : '未开奖' }</Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>投注号码</Text>                                <Text style={styles.topTitle}>{lotteryPlay}{betContent}</Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>玩法名称</Text>                                <Text style={styles.topTitle}>{ lotteryType }</Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>房间等级</Text>                                <Text style={styles.topTitle}>{ roomLevel }</Text>                            </View>                        </View>                        <View style={styles.item}>                            <View style={styles.content}>                                <Text style={[ styles.label,                                    (!!prizeStatus && prizeStatus!=='未中奖') &&  {color: '#EC0909'}]}>                                    中奖金额                                </Text>                                <Text style={[styles.topTitle,                                    (!!prizeStatus && prizeStatus!=='未中奖')  && {color: '#EC0909'}]}>                                    { prizeStatus === '未开奖' ? '未开奖' : !!winAmount ? Number(winAmount).toFixed(2) : '0.00'}                                    </Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>投注金额</Text>                                <Text style={styles.topTitle}>{ betAmount }</Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>投注赔率</Text>                                <Text style={styles.topTitle}>{ betOdds }</Text>                            </View>                        </View>                        <View style={[styles.item,{borderBottomWidth:0}]}>                            <View style={styles.content}>                                <Text style={styles.label}>期号</Text>                                <Text style={styles.topTitle}>{ issueNo }</Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>投注时间</Text>                                <Text style={styles.topTitle}>{ datetime }</Text>                            </View>                            <View style={styles.content}>                                <Text style={styles.label}>注单号</Text>                                <Text style={styles.topTitle}>{ orderNo }</Text>                            </View>                        </View>                        {                            prizeStatus === '未开奖' || !prizeStatus ? null : (                                <Image style={styles.topImg}                                       source={prizeStatus === '已中奖' ? prize : noPrize} />                            )}                    </View>                    <Image style={styles.imgBtm} source={imgBtm}/>                    <View style={styles.btnWrap}>                        <AppButton title="再来一注" onPressHandle={() => {                            const resetActions = NavigationActions.reset({                                index: 1,                                actions: [                                    NavigationActions.navigate({ routeName: 'Main'}),                                    NavigationActions.navigate({                                        routeName: 'RoomList',                                        params: {                                            categoryId: this.state.orderDetail.categoryId,                                            lotteryId: this.state.orderDetail.lotteryId                                        }                                    })                                ]                            });                            this.props.navigation.dispatch(resetActions);                        }}/>                    </View>                </View>            </View>        )    };    fetchRecord () {        const data = {            orderId: this.orderId        };        accountService.getOrderDetail(data).then(res => {            console.log('getOrderDetail', res);            this.setState({                orderDetail: res.data            })        }).catch(err => {            errorHandle(err).then(err => {                if (err.routeName && err.routeName === 'Login') {                    this.navigate('Login');                }            })        })    }}const styles = StyleSheet.create({    container: {        marginTop: 10,    },    orderBox: {        backgroundColor: '#FFF',        position: 'relative'    },    name: {        height: 47,        flexDirection: 'row',        alignItems: 'center',        paddingTop: 8,        paddingHorizontal: 10,        borderBottomWidth: 1,        borderBottomColor: '#e5e5e5',    },    item: {        marginHorizontal: 10,        borderBottomWidth: 1,        borderBottomColor: '#e5e5e5',        paddingVertical: 8,    },    lotteryName: {        fontSize: 16,        fontWeight: 'bold',        flex: 1,        color: '#333',    },    topSmallTitle: {        flex: 2,        fontSize: 14,        color: '#999',    },    content: {        flexDirection: 'row',        alignItems: 'center',        justifyContent: 'center',        height: 22,    },    label: {        flex: 2,        color: '#666',        fontSize: 12,    },    topTitle: {        flex: 4,        color: '#333',        fontSize: 12,        backgroundColor: 'transparent'    },    textHighLine:{        color: 'red',        fontWeight:'bold',    },    btnWrap: {        marginTop: 60,        marginHorizontal: 10,    },    topImg: {        width: 73,        height:64,        position: 'absolute',        top: 0,        right:0,    },    imgBtm: {        width: width,        height: 5,    }});
import React, { Component } from 'react';import {    StyleSheet,    ScrollView,    View,    Text,    TouchableOpacity,    Image,    Dimensions} from 'react-native';import Icon from 'react-native-vector-icons/FontAwesome';import { selectionStyles, selectionBallArea } from '../../../../../assets/style';const { width } = Dimensions.get('window');import { observer, inject } from 'mobx-react/native';import { betStore } from '../../../../../store';import {showToast} from "../../../../../utils/index";inject('betStore');@observerexport default class HasContentView extends Component {    constructor(props) {        super(props);        this.state = {            selectedBallIndex: 0,        };        this.resetSelected = this.resetSelected.bind(this);        this.tabMenu = props.playInfo.label;    }    resetSelected () {        this.setState({            selectedBallIndex: 0        }, () => {            betStore.selectHasContentBall(this.props.playInfo.playType[0].rates[0])        })    }    componentDidMount () {        const rateItem = this.props.playInfo.playType[0].rates[0];        rateItem.tabMenu = this.tabMenu;        betStore.selectHasContentBall(rateItem);    }    render () {        const { playType, content } = this.props.playInfo;        const { selectedBallIndex } = this.state;        const { minLimit, maxLimit } = playType[selectedBallIndex];        return (            <ScrollView style={selectionStyles.wrap}>                <View style={selectionStyles.menuBar}>                    { playType.map((item, index) => {                        const rateItem = item.rates[0];                        return (                            <View                                style={[{flexDirection: 'column'}, selectionBallArea.center]}                                key={index}>                                <TouchableOpacity                                    style={[                                        selectionStyles.menuItem,                                        (index+1)%4 === 0 && {marginRight: 0},                                        selectedBallIndex === index && {borderColor: '#EC0909'}                                    ]}                                    onPress={()=>{                                        this.setState({                                            selectedBallIndex: index,                                        });                                        rateItem.tabMenu = this.tabMenu;                                        betStore.selectHasContentBall(rateItem);                                        betStore.cleanSelectedContent();                                    }}>                                    <Text style={                                        selectedBallIndex === index && {color: '#EC0909'}                                    }>                                        {item.playTypeName}                                    </Text>                                    { selectedBallIndex === index && (                                        <Image                                            style={selectionStyles.selectedIcon}                                            source={require('../../../../../assets/images/bet_selected_bg.png')}/>                                    )}                                </TouchableOpacity>                                <Text style={[                                    styles.rateText,                                    (index+1)%4 === 0 && {marginRight: 0}                                ]}>                                    {rateItem.rate}                                </Text>                            </View>                        )                    })}                </View>                <View style={styles.tipsWrp}>                    { minLimit && (                        <Text style={[styles.tips, styles.limitTip]}>                            <Icon name="bell-o" color="#999" size={12}/>                            {` 至少选中 ${minLimit } 个号码`}                        </Text>                    )}                </View>                <View style={selectionBallArea.selectionBox}>                    { content.map((item, index) => {                        const isIncludeContent = betStore.selectedContent.includes(item);                        return(                            <View style={[                                selectionBallArea.number.wrap,                                selectionBallArea.center,                                {width: (width-10)/5}                            ]} key={index}>                                <TouchableOpacity                                    style={[                                        selectionBallArea.number.display,                                        isIncludeContent && selectionBallArea.selectedBg                                    ]}                                    onPress={() => {                                        if (!!maxLimit && !isIncludeContent && betStore.selectedContent.length === Number(maxLimit)) {                                            showToast(`最多只能选择 ${maxLimit}`)                                        } else {                                            betStore.selectContent(item, minLimit)                                        }                                    }}                                >                                    <Text style={[                                        selectionBallArea.number.displayText,                                        selectionBallArea.center,                                        isIncludeContent && {color: '#FFF'}                                    ]}>                                        {item}                                    </Text>                                </TouchableOpacity>                            </View>                        )                    }) }                </View>            </ScrollView>        )    }}const styles = StyleSheet.create({    rateText: {        marginRight: 20,        color: '#FF0000',        lineHeight: 16,        paddingTop: 5    },    tipsWrp: {        flexDirection: 'row',        paddingTop: 10,        paddingHorizontal: 10,    },    tips: {        justifyContent: 'center',        alignItems: 'center'    },    rateTip: {        flex: 2,        color: '#FF0000',        fontSize: 14    },    limitTip: {        flex: 1,        color: '#999',        fontSize: 12,    }});